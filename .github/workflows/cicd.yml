name: CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Fetch current tags from Docker Hub
        id: fetch-tags
        run: |
          TAGS=$(curl -s -u ${{ secrets.DOCKER_USERNAME }}:${{ secrets.DOCKER_PASSWORD }} "https://hub.docker.com/v2/repositories/${{ secrets.DOCKER_IMAGE }}/tags" | jq '.results | length')
          echo "::set-output name=tag_count::$TAGS"

      - name: Build Docker image
        env:
          NEW_TAG: ${{ steps.fetch-tags.outputs.tag_count }}
        run: |
          NEW_TAG=$((NEW_TAG + 1))
          docker build -t ${{ secrets.DOCKER_IMAGE }}:$NEW_TAG .
          docker push ${{ secrets.DOCKER_IMAGE }}:$NEW_TAG
          echo "::set-output name=new_tag::$NEW_TAG"

  update-config:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout config repo
        uses: actions/checkout@v2
        with:
          repository: dungbun31/ks8-config-api
          token: ${{ secrets.GH_TOKEN }}
          path: ks8-config-api

      - name: Update image tag in values.yaml
        run: |
          cd ks8-config-api
          sed -i "s/tag: .*/tag: '${{ needs.build.outputs.new_tag }}'/" values.yaml
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git add values.yaml
          git commit -m "Update image tag to ${{ needs.build.outputs.new_tag }}"
          git push origin main
